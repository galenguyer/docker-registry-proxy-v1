## /etc/nginx/nginx.conf
# an nginx config for a docker registry running
# behind traefik, with http verbs filtered by
# client ip address

## entries in /etc/nginx/conf.d/whitelist.ips should be in this format:
# <ip address>/<netmask> 1;
## for example
# 10.0.0.0/24 1;

# run nginx as the www-data user
user www-data;

# set the number of workers equal to the cpu count
worker_processes auto;

# set the maximum number of simultaneous connections
# since this is a proxy server, this is set higher than default
events {
    worker_connections 2048;
}

# configuration for the webserver itself
http {
  # set the registry upstream
  upstream docker-registry {
    server registry:5000;
  }

  # check if the forwarded client ip is whitelisted
  geo $http_x_forwarded_for $whitelist {
    default 0;
    proxy 0.0.0.0/0;
    proxy_recursive;
    include /etc/nginx/conf.d/whitelist.ips;
  }

  # set the $allowed variable to true for whitelisted ips
  map $whitelist $allowed {
    0 "false";
    1 "true";
  }

  ## Set a variable to help us decide if we need to add the
  ## 'Docker-Distribution-Api-Version' header.
  ## The registry always sets this header.
  ## In the case of nginx performing auth, the header is unset
  ## since nginx is auth-ing before proxying.
  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
  }

  log_format json escape=json
  '{'
    '"time_local":"$time_iso8601",'
    '"remote_addr":"$remote_addr",'
    '"x_forwarded_for":"$http_x_forwarded_for",'
    '"x_real_ip":"$http_x_real_ip",'
    '"host":"$host",'
    '"request":"$request",'
    '"status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent"'
  '}';
  access_log /var/log/nginx/access.json json;
  access_log /var/log/nginx/access.log;

  # declare the webserver
  server {
    # listen for http traffic on port 80
    listen 80;

    # set a custom error page which allows all http verbs
    error_page 410 = @push;

    # if the client ip is on the whitelist, send it to the error page
    if ($allowed = true) {
      return 410;
    }

    # disable any limits to avoid http 413 for large image uploads
    client_max_body_size 0;

    # required to avoid http 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;

    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }

    ## If $docker_distribution_api_version is empty, the header is not added.
    ## See the map directive above where this variable is defined.
    add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

    # required for docker client
    proxy_set_header Host $http_host;
    proxy_read_timeout 900;

    # if the ip is whitelisted, allow all verbs
    location @push {
      proxy_pass http://docker-registry;
    }

    # otherwise deny all verbs but GET and HEAD
    location  / {
      limit_except GET HEAD {
        deny all;
      }
      proxy_pass http://docker-registry;
    }
  }
}
